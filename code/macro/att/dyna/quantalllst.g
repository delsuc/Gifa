; quantalllst.g $liste $errmeth $intmeth $homoth $zone
;
; quant1pklst.g 110 datalst Sumrec Baseline 8002 0.8 "57 774 168 956"
; quantify all the assignment entries on a list of data-sets
;


Print "Current project :"
pwd

;if ($att['largest'] == 0) error "Database Empty !"
if ($dim != 2) error "Command available in 2D only !"
;if ($zoom == 0) error "Command not available in full ZOOM mode"

if (!$arg) then

  formbox 'Integration tool for Dynamics Analysis' \
   'quantalllst.g ("processing/"//$listfile) $errmeth $intmeth $homot' \
   'Data-sets list' string listfile % \
   'Error evaluation' enum 'Baseline,Multiexp' errmeth 'Baseline' \
   'Integration method' enum 'Sumrec,MaxInBox' intmeth 'Sumrec' \
   'Size of the Box' cursor 0.5 3.0 1 homot 1.0 \
   '(ratio of the integration box to the standard box)' message \
   *

else

  set liste = $_
  set errmeth = $_
  set intmeth = $_
  set homoth = $_

  if ($errmeth s= 'Baseline' & $intmeth s= 'Sumrec') \
     alert "Warning, with 'Baseline and Sumrec' error bars will be inaccurate"

; store the current zoom window
  set stoname = (tailx($name,"/"))
  set f1min = (itop($zoom_2d[3],2,1))
  set f2min = (itop($zoom_2d[4],2,2))
  set f1max = (itop($zoom_2d[1],2,1))
  set f2max = (itop($zoom_2d[2],2,2))

; eval noise
  if ($errmeth s= 'Baseline') then
    zoom 0
    alert 'First select an empty area to evaluate noise of each data-set, THEN click on Ok'
    set zonebr = ($zone[1]//"/"//$zone[2]//"/"//$zone[3]//"/"//$zone[4])
  else
   set zonebr = " "
  endif

; determine the number of entries in assignment db
  set u = 0
  foreach i in att within 2 $f1min $f2min $f1max $f2max
   if ($i s! "LARGEST") then
      set u = (%+1)
   endif
  endfor

; initialize 'inprogress'
  initinprogress $u
  set uu = 0

; open output file
  set out = ($liste//"_integ")
  open $out
  set tmp = ('tmp' // int(1000000*$random))
  sh ('pwd >'; $tmp)
  open $tmp
  set pwd = <$tmp
  close $tmp
  sh ('/bin/rm -f';$tmp)
  fprint $out ("# Project:"; $pwd)
  fprint $out ("# File generated by GIFA" ; $version)
  fprint $out ("# Data-set list:" ; $liste)
  detnbexp.g $liste
  fprint $out ("# Number_of_experiments:" ; $nbexp)
  fprint $out ("# Zone for integration (ppm): from"; $f1min; $f2min; "to"; $f1max; $f2max)
  fprint $out ("# Integration method:" ; $intmeth)
  fprint $out ("# Method of error evaluation:" ; $errmeth)
  if ($errmeth s= "Baseline") then
    fprint $out ("# Zone for noise evaluation (index):" ; $zonebr)
  endif
;  fprint $out ("# Ratio of the integration box:" ; $homoth)

; main loop
  set i = 1
  foreach i in att within 2 $f1min $f2min $f1max $f2max
    set uu = (%+1) inprogress $uu
;    print $i
    set bruit = 0
    if ($errmeth s= "Multiexp") then
      bruit1pklst.g $i $liste $intmeth $homoth $zonebr
      set bruit = $returned
    endif
;    print ("quant1pklst.g ";$i ;$liste ; $intmeth ; $errmeth ;$bruit ;$homoth ; $zonebr)
    quant1pklst.g $i $liste $intmeth $errmeth $bruit $homoth $zonebr
    listout.g $i $out 
  endfor

  close $out
  inprogress $att["LARGEST"]
;  print ("stoname" ; $stoname)
  read ("spectra/"//$stoname)
  set x1 = (ptoi($f1min,2,1))
  set x2 = (ptoi($f2min,2,2))
  set x3 = (ptoi($f1max,2,1))
  set x4 = (ptoi($f2max,2,2))
  zoom 1 $x3 $x4 $x1 $x2

  print ("Integration results are found in:"; $out)
endif

quit

