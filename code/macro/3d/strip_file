; strip_file axis strip_width first_peak last_peak
;
; make a strip file from the currently JOINed 3D file.
;
; assumes the 2d peak table holds the peak pick of the projection of the 3D
; perpendicular to the strip axis.
;
; axis : long axis for the strip, usually the axis of the projection
;        f3 is always the short dimension
; strip_width : the width in pixel of the extracted strips 
; first_peak last_peak : part of the peak table to process
;
; spectral widthe and freq are adapted in the composite (F2) dimension so 
; that the position in ppm reflects the peak index.
;
; if the final size is larger than a given threshold (see macro code)
; a temporary file will be created in /usr/tmp. Be careful not to overflow
; your disk !

if (!$arg & $CONFIG_GRAPH ) then          ; adapted to dialogbox on 21/09/98 M.A.D.
   formbox 'strip_file' \
       'strip_file $axis $w $first $last' \
        Help action 'help strip_file' \
        "Axis to process" enum 'F1,F2' axis 'F1' \
        noreturn \
        "Strip width" cursor 1 20 0 w 4 \
        "index of first peak" int first 1 \
        noreturn \
        "Enter index of last peak" int last $npk2d \
	*
else

set temp_file_name = '/usr/tmp/gifa_temporary_big'

if ($c_dim!=3) error 'Works only on a JOINed 3D'

set axis = F1
message "Axis to process F1/F2"
set axis = $_
set axis = (toupper($axis))

set w = 4    ; 'strip' width in pixel
message "Strip width"
set w = $_

set first = 1
message "Enter index of first peak"
set first = $_
if ($first <1 | $first >$npk2d) error 'wrong peak index'

set last = $npk2d
message "Enter index of last peak"
set last = $_
if ($last <= $first | $last >$npk2d) error 'wrong peak index'

; set static params
if ($axis s= 'F1') then
	set long =  $C_SIZEF1
	set ax_ext = 'F2'
elsif ($axis s= 'F2') then
	set long =  $C_SIZEF2
	set ax_ext = 'F1'
else
	error 'Error with axis'
endif

; initialise les param variables
initinprogress $last
dim 3
chsize $long ($last-$first+1) (2*$w)
for i = $first to $last
  inprogress $i
  dim 2
  getc $ax_ext $PK2D_F1F[$i] 1 ($PK2D_F2f[$i]-$w+1) $long ($PK2D_F2f[$i]+$w)
  dim 3
  put plane f2 $i
endfor

chsize % % (%+1)
modifysize $long 1 (($last-$first+1)*(2*$w+1))
if ($MEM_PRO_2D <= $c_sizef3*$c_sizef1) then
	plane f2 1
	dim 2
else		; plane would not work -> do it through a file
	set ff = $c_name
	write $temp_file_name
	dim 2
	join $temp_file_name
	getc f2 1 %%
	disjoin
	join $ff
	sh ('/bin/rm'; $temp_file_name)
endif
; on positionne les param. spectraux pour avoir l'index de peak en ppm en F2
; ! Bidouille

if ($axis s= 'F2') then
  freq $c_freq $c_freq2 1
  specw $c_SPECWF2 (-($last-$first+1))
  offset $C_OFFSF2 ($last+0.5)
elsif ($axis s= 'F1') then
  freq $c_freq $c_freq1 1
  specw $c_SPECWF1 (-($last-$first+1))
  offset $C_OFFSF1 ($last+0.5)
endif

refmacro 0

endif
