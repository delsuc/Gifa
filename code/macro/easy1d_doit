; easy1d_doit
; used by the easy1d form
;
; see also easy1d

set ffn = $_
set fw2 = $_
set fw2p = $_
set fz2 = $_
set flatt = $_
set fft2 = $_
set fdig = $_
set fmod = $_
set fph20 = $_
set fph21 = $_
set fb2 = $_
set fact = $_
;prepare ft
set fft2 = ("ft_" // $fft2)
;switch on action
set phasedf2 = (1==0)
if ($fact s= "Do it" |  $fact s= "Do it but phase") then
	read $ffn
	if ($dim != 1) error 'This is not a 1D file'
	if ($fz2 < $si2_2d) chsize $fz2  ; truncate BEFORE apod.

	if ($flatt s! 'no') flat_solvent $flatt ;flatten solvent

	if ($fw2 s! "none") $fw2 $fw2p   ; apod

	chsize $fz2                      ; zero-fill AFTER apod.
	$fft2                            ; and FT in F2
	if ($fdig s= 'on') then
            join $ffn
            if (!hexist("BRUKER_DECIM")) bruker_add_param $ffn
            bruker_corr  (header("BRUKER_DSPFVS")) (header("BRUKER_DSPFIRM")) (header("BRUKER_DECIM"))
            disjoin
        endif
endif

if ($fact s= "Do phase only" | $fact s= "Do it") then
   if ($fmod s= 'modulus') then
	modulus
   else
	if ($fph20 != 0 | $fph21 != 0) phase $fph20 $fph21
   endif
endif

if ($fact s= "Do b.corr only" | $fact s= "Do it") then
	if ($fb2 s! "none" & $itype_1d != 0) 	   real 
	if ($fb2 s= "polynomial") then
	   bcorrp0 bcorr 3
	elsif ($fb2 s= 'moving_average') then
	   bcorrp1 bcorr 3 bcorrp0
	elsif ($fb2 s= 'polynomial+moving_average') then
	   bcorrp0 bcorr 3
	   bcorrp1 bcorr 3 bcorrp0      
	elsif ($fb2 s= "moving_average+polynomial") then
	   bcorrp1 bcorr 3
	   bcorrp0 bcorr 3
	endif
endif

if ($fact s= "Write macro") then
	dialogbox macro "Macro name" string mname ($name//'.g') *
	open $mname
	fprint $mname "; macro generated automagically by easy1d"
	fprint $mname  ("read" ; $ffn)
	join $ffn			; to check sizes of input file
	if ($fz2 < $c_sizef1) fprint $mname ("chsize";$fz2)

	if ($flatt s! 'no') fprint $mname ('flat_solvent';$flatt)
	if ($fw2 s! "none") 	fprint $mname  ($fw2 ; $fw2p )
	fprint $mname  ("chsize" ;$fz2)
	fprint $mname  $fft2
        if ($fdig s= 'on') then
            if (!header("BRUKER_DECIM")) bruker_add_param $ffn
            fprint $mname ("bruker_corr";(header("BRUKER_DSPFVS"));(header("BRUKER_DSPFIRM"));(header("BRUKER_DECIM")))
        endif


	disjoin

	if ($fmod s= 'modulus') then
	   fprint $mname 'modulus'
	else
	   if ($fph20 != 0 | $fph21 != 0) fprint $mname  ("phase"; $fph20; $fph21)
	endif
	if ($fb2 s! "none" & $fmod s! 'modulus') fprint $mname "real"
	if ($fb2 s= "polynomial") then
	   fprint $mname "bcorrp0 bcorr 3 ; polynomial"
	elsif ($fb2 s= 'moving_average') then
	   fprint $mname "bcorrp1 bcorr 3 bcorrp0 ; moving_average"
	elsif ($fb2 s= 'polynomial+moving_average') then
	   fprint $mname "bcorrp0 bcorr 3 bcorrp1 bcorr 3 bcorrp0 ; polynomial+moving_average"      
	elsif ($fb2 s= "moving_average+polynomial") then
	   fprint $mname "bcorrp1 bcorr 3 bcorrp0 bcorr 3 ; moving_average+polynomial"   
	endif
	close $mname
	alert ("Macro '"//$mname//"' written, just type its name for applying it")
elsif ($fact s= "Load macro") then
	dialogbox macro "Macro name" file mname ($name//'.g') *
	open $mname
	set fw2 = 'none'
	set fw2p = 0
	set flatt = 'no'
	set fmod = 'phase-sensitive'
        set fdig = 'off'
	set fph20 = 0
	set fph21 = 0
	set fb2 = "none"
	set in = <$mname
	while (!eof($mname))
		set cmd = (head($in))	; parse commande
		set param = (tail($in))
		if ($cmd s= ";") then	; show comments
			print $param
		elsif ($cmd s= "read") then
			set ffn = $param
		elsif ($cmd s= "sin" | $cmd s= "sqsin" | $cmd s= "expbroad" | $cmd s= "gaussbroad") then
				set fw2 = $cmd
				set fw2p = $param
		elsif ($cmd s= 'flat_solvent') then
				set flatt = $param
		elsif ($cmd s= "chsize") then
				set fz2 = $param
		elsif ($cmd s= "bruker_corr") then
				set fdig = 'on'
		elsif ($cmd s= "ft_sim" | $cmd s= "ft_seq") then
			set fft2 = (subst($cmd,4,len($cmd)))
		elsif ($cmd s= "modulus") then
			set fmod = 'modulus'
		elsif ($cmd s= "phase") then
				set fph20 = (head($param))
				set fph21 = (head(tail($param)))
		elsif (($cmd s= "bcorrp0") | ($cmd s= "bcorrp1")) then
				while (tail($param) s! ' ')
					set param = (tail($param))
				endwhile
				set fb2 = $param
		endif
		set in = <$mname
	endwhile
	close $mname
	easy1d $ffn $flatt $fw2 $fw2p $fft2 $fdig $fz2 $fmod $fph20 $fph21 $fb2
endif



